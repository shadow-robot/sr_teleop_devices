<launch>
  <arg name="serial_port" default="/dev/ttyUSB0"/>
  <arg name="hand_prefix" default="rh"/>
  <arg name="calibration" default="$(find sr_cyberglove_config)/calibrations/right_cyberglove.yaml"/>
  <arg name="mapping" default="$(find sr_cyberglove_config)/mappings/GloveToHandMappings_generic"/>
  <arg name="version" default="2"/>
  <arg name="protocol" default="8bit"/>
  <!-- Activate internal cybeglove data filtering -->
  <arg name="filter" default="true"/>
  <!-- offset in second to set the trajectory time stamp. It must be grater than the time it takes for the trajectory goal msg to reach the trajectory controller -->
  <arg name="trajectory_tx_delay" default="0.1"/>
  <!-- this is the delay from the beginning of the trajectory. I.e. the time_from_start of the single trajectory point -->
  <arg name="trajectory_delay" default="0.002"/>

  <node pkg="cyberglove_trajectory" name="$(arg hand_prefix)cyberglove" type="cyberglove_trajectory" output="screen">
    <!-- We're doing some oversampling. You can set the frequency at which
	 the data are sampled as well as the frequency at which they're published
	 possible values:
	   - 100 -> 100 Hz
	   - 45  -> 45 Hz
	   - 10  -> 10 Hz
	   - 1  -> 1 Hz
    -->
    <param name="sampling_frequency" type="double" value="100.0" />
    <param name="publish_frequency" type="double" value="100.0" />
    <param name="path_to_glove" type="string" value="$(arg serial_port)" />
    <rosparam command="load" file="$(arg calibration)"/>
    <param name="cyberglove_mapping_path" type="string" value="$(arg mapping)" />
    <param name="hand_prefix" type="string" value="$(arg hand_prefix)" />
    <param name="cyberglove_version" type="string" value="$(arg version)" />
    <param name="streaming_protocol" type="string" value="$(arg protocol)" />
    <param name="filter" type="bool" value="$(arg filter)" />
    <param name="trajectory_delay" type="double" value="$(arg trajectory_delay)" />
    <param name="trajectory_tx_delay" type="double" value="$(arg trajectory_tx_delay)" />
  </node>
</launch>
